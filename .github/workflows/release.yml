name: Build and Release on Tag

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  linux-debian12:
    name: Linux (Debian 12 amd64)
    runs-on: ubuntu-latest
    container:
      image: debian:12-slim
    env:
      VERSION: ${{ github.ref_name }}
      CLEAN_VERSION: ${{ github.ref_name }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            ca-certificates git make gcc build-essential pkg-config \
            zlib1g-dev libssl-dev curl
          update-ca-certificates || true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set VERSION to tag
        run: echo "${VERSION}" > VERSION
      - name: Build
        run: make clean all
      - name: Test
        run: make check
      - name: Package
        run: |
          mkdir -p artifacts
          BIN="bin/presign"
          strip -s "$BIN" || true
          TAR="artifacts/presign-${VERSION}-linux-amd64.tar.gz"
          tar -czf "$TAR" "$BIN" README.md presign.1 LICENSE 2>/dev/null || \
          tar -czf "$TAR" "$BIN" README.md presign.1
          sha256sum "$TAR" > "${TAR}.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: presign-${{ env.VERSION }}-linux-amd64
          path: |
            artifacts/presign-${{ env.VERSION }}-linux-amd64.tar.gz
            artifacts/presign-${{ env.VERSION }}-linux-amd64.tar.gz.sha256
          if-no-files-found: error

  macos-amd64:
    name: macOS (Intel amd64)
    runs-on: macos-13
    env:
      VERSION: ${{ github.ref_name }}
      CLEAN_VERSION: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install coreutils via Homebrew
        run: |
          brew update || true
          # Install coreutils for GNU compatibility
          brew install coreutils
      - name: Install OpenSSL via Homebrew
        run: |
          brew update || true
          # prefer openssl@3, fall back to openssl
          brew install openssl@3 || brew install openssl
          OPENSSL_PREFIX=$(brew --prefix openssl@3 2>/dev/null || brew --prefix openssl)
          echo "OPENSSL_PREFIX=${OPENSSL_PREFIX}" >> $GITHUB_ENV
          echo "LDFLAGS=-L${OPENSSL_PREFIX}/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I${OPENSSL_PREFIX}/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${OPENSSL_PREFIX}/lib/pkgconfig" >> $GITHUB_ENV
      - name: Set VERSION to tag
        run: echo "${VERSION}" > VERSION
      - name: Build
        run: make clean all
      - name: Test
        run: make check
      - name: Package
        run: |
          mkdir -p artifacts
          BIN="bin/presign"
          strip -S "$BIN" || true
          TAR="artifacts/presign-${VERSION}-macos-amd64.tar.gz"
          tar -czf "$TAR" "$BIN" README.md presign.1 LICENSE 2>/dev/null || \
          tar -czf "$TAR" "$BIN" README.md presign.1
          shasum -a 256 "$TAR" > "${TAR}.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: presign-${{ env.VERSION }}-macos-amd64
          path: |
            artifacts/presign-${{ env.VERSION }}-macos-amd64.tar.gz
            artifacts/presign-${{ env.VERSION }}-macos-amd64.tar.gz.sha256
          if-no-files-found: error

  macos-arm64:
    name: macOS (Apple Silicon arm64)
    runs-on: macos-14
    env:
      VERSION: ${{ github.ref_name }}
      CLEAN_VERSION: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install coreutils via Homebrew
        run: |
          brew update || true
          # Install coreutils for GNU compatibility
          brew install coreutils
      - name: Install OpenSSL via Homebrew
        run: |
          brew update || true
          # prefer openssl@3, fall back to openssl
          brew install openssl@3 || brew install openssl
          OPENSSL_PREFIX=$(brew --prefix openssl@3 2>/dev/null || brew --prefix openssl)
          echo "OPENSSL_PREFIX=${OPENSSL_PREFIX}" >> $GITHUB_ENV
          echo "LDFLAGS=-L${OPENSSL_PREFIX}/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I${OPENSSL_PREFIX}/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${OPENSSL_PREFIX}/lib/pkgconfig" >> $GITHUB_ENV
      - name: Set VERSION to tag
        run: echo "${VERSION}" > VERSION
      - name: Build
        run: make clean all
      - name: Test
        run: make check
      - name: Package
        run: |
          mkdir -p artifacts
          BIN="bin/presign"
          strip -S "$BIN" || true
          TAR="artifacts/presign-${VERSION}-macos-arm64.tar.gz"
          tar -czf "$TAR" "$BIN" README.md presign.1 LICENSE 2>/dev/null || \
          tar -czf "$TAR" "$BIN" README.md presign.1
          shasum -a 256 "$TAR" > "${TAR}.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: presign-${{ env.VERSION }}-macos-arm64
          path: |
            artifacts/presign-${{ env.VERSION }}-macos-arm64.tar.gz
            artifacts/presign-${{ env.VERSION }}-macos-arm64.tar.gz.sha256
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [linux-debian12, macos-amd64, macos-arm64]
    permissions:
      contents: write
    env:
      VERSION: ${{ github.ref_name }}
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Validate artifacts
        run: |
          echo "Validating downloaded artifacts..."
          find dist -name "*.tar.gz" -o -name "*.sha256" | sort
          # Ensure we have all expected artifacts
          expected_files=(
            "dist/presign-${VERSION}-linux-amd64/presign-${VERSION}-linux-amd64.tar.gz"
            "dist/presign-${VERSION}-linux-amd64/presign-${VERSION}-linux-amd64.tar.gz.sha256"
            "dist/presign-${VERSION}-macos-amd64/presign-${VERSION}-macos-amd64.tar.gz"
            "dist/presign-${VERSION}-macos-amd64/presign-${VERSION}-macos-amd64.tar.gz.sha256"
            "dist/presign-${VERSION}-macos-arm64/presign-${VERSION}-macos-arm64.tar.gz"
            "dist/presign-${VERSION}-macos-arm64/presign-${VERSION}-macos-arm64.tar.gz.sha256"
          )
          for file in "${expected_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "ERROR: Missing expected artifact: $file"
              exit 1
            fi
          done
          echo "âœ… All artifacts validated successfully"
      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: presign ${{ env.VERSION }}
          files: |
            dist/*/*.tar.gz
            dist/*/*.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}